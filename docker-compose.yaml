volumes:
    postgres-data:
        external: true
    pg-admin:
        external: true

services:
  postgres:
    build:
        context: ./relational-data
        dockerfile: ./Dockerfile.dev
    volumes:
        - postgres-data:/var/lib/postgresql/data
    environment:
        - POSTGRES_MULTIPLE_DATABASES=users, outfit
        - POSTGRES_PASSWORD=test-databases

    ports:
        - 15432:5432
  users-api:
    build:
      context: ./users-api-service
      dockerfile: ./Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./users-api-service:/app
    environment:
      DATABASE_URL: postgres://users:password@postgres:5432/users
      WAIT_HOSTS: postgres:5432
      WAIT_TIMEOUT: 240
      SIGNING_KEY: 92e6bb7d29b36d7408a9b47f0c591e66b705fd934ecac8103343d4bd4a07cdd8

  outfit-api:
    build:
      context: ./outfit-api-service
      dockerfile: ./Dockerfile.dev
    ports:
      - "8100:8000"
    volumes:
      - ./outfit-api-service:/app
    environment:
      DATABASE_URL: postgres://outfit:password@postgres:5432/outfit
      WAIT_HOSTS: postgres:5432
      WAIT_TIMEOUT: 240
      SIGNING_KEY: 92e6bb7d29b36d7408a9b47f0c591e66b705fd934ecac8103343d4bd4a07cdd8

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_USERS_SERVICE_API_HOST: http://localhost:8000
      REACT_APP_OUTFIT_SERVICE_API_HOST: http://localhost:8100

  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: 1
